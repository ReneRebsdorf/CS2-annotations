name: main
on:
  push:
    tags:
      - v*.*.*
    branches:
      - "*"
permissions:
  contents: write
  discussions: write
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          mkdir annotations
          cp -r local/ annotations/local/
          zip -r annotations.zip annotations/
      - name: Release zip
        # Only release when a tag is pushed, which triggered this workflow
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: annotations.zip
          fail_on_unmatched_files: true
          generate_release_notes: true
          make_latest: true
      - id: setup-steamcmd
        uses: CyberAndrii/setup-steamcmd@v1.2.0
      - id: setup-steam-dir
        run: |
          mkdir -p "/home/runner/Steam/config"
          echo "$SteamConfigVDF" > "/home/runner/Steam/config/config.vdf"
          chmod 777 "/home/runner/Steam/config/config.vdf"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - id: update_workshop
        env:
          # Steam account name to login with
          STEAM_ACCOUNT_NAME: ${{ secrets.STEAM_ACCOUNT_NAME }}
          # Plain-text steam config vdf generated for the account being used. Used for MFA
          # Generate the content by logging in locally using MFA
          STEAM_CONFIG_VDF: ${{ secrets.STEAM_CONFIG_VDF }}
          # Path to the steamcmd executable
          STEAM_CMD: ${{ steps.setup-steamcmd.outputs.executable }}
        run: |
          python src/workshop.py